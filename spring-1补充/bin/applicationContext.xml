<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">
	
	<!-- 配置bean 
		class：bean的全类名，通过反射的方式在IOC中创建Bean，要求B额暗中必须有无参的构造器
		id：标识容器中的bean.id唯一	
	-->
	<bean id="helloWorld" class="com.d.spring.beans.HelloWorld">
		<property name="name2" value="Spring"></property>
	</bean>
	
	<!-- 通过构造方法来配置bean 可以通过位置和参数类型来匹配构造器-->
	<bean id="car" class="com.d.spring.beans.Car">
		<constructor-arg value="Audi" index="0"></constructor-arg>
		<constructor-arg value="ShangHai" index="1"></constructor-arg>
		<constructor-arg value="300000" index="2" type="double"></constructor-arg>
	</bean>
	<bean id="car2" class="com.d.spring.beans.Car">
		<constructor-arg value="Baoma"></constructor-arg>
		<!-- 如果字面值包含特殊字符使用<![CDATA[]]>包裹  -->
		
		<constructor-arg >
			<value><![CDATA[<ShangHai^***>]]></value>
		</constructor-arg>
		<!-- 
		<constructor-arg value="240" type="int"></constructor-arg>
		与下句等同
		 -->
		<constructor-arg type="int">
			<value>240</value>
		</constructor-arg>
	</bean>
	
	<bean id="person" class="com.d.spring.beans.Person">
		<property name="name" value="Tom"></property>
		<property name="age" value="24"></property>
		<!-- 可以使用property的 ref的属性建立bean之间的关系-->
		<property name="car" ref="car2"></property>
	</bean>
	
	<bean id="person2" class="com.d.spring.beans.Person">
		<property name="name" value="Jim"></property>
		<property name="age" value="24"></property>
		<!-- 可以使用property的 ref的属性建立bean之间的关系-->
		<property name="car" >
			<ref bean="car2"/>
		</property>
	</bean>
	
	<bean id="person3" class="com.d.spring.beans.Person">
		<constructor-arg value="Jam"></constructor-arg>
		<constructor-arg value="25"></constructor-arg>
		<constructor-arg ref="car"></constructor-arg>
		<property name="car.maxSpeed" value="230"></property>
	</bean>
	
	
	
	
	
	
	<!-- 配置list属性值学习 -->
	
	<!-- 通过构造方法来配置bean 可以通过位置和参数类型来匹配构造器-->
	<bean id="1car" class="com.d.spring.beans.collections.Car">
		<constructor-arg value="Audi" index="0"></constructor-arg>
		<constructor-arg value="ShangHai" index="1"></constructor-arg>
		<constructor-arg value="300000" index="2" type="double"></constructor-arg>
	</bean>
	<bean id="1car2" class="com.d.spring.beans.collections.Car">
		<constructor-arg value="Baoma"></constructor-arg>
		<!-- 如果字面值包含特殊字符使用<![CDATA[]]>包裹  -->
		
		<constructor-arg >
			<value><![CDATA[<ShangHai^***>]]></value>
		</constructor-arg>
		<!-- 
		<constructor-arg value="240" type="int"></constructor-arg>
		与下句等同
		 -->
		<constructor-arg type="int">
			<value>240</value>
		</constructor-arg>
	</bean>
	<bean id="person4" class="com.d.spring.beans.collections.Person">
		<property name="name" value="Mike"></property>
		<property name="age" value="23"></property>
		<property name="cars">
			<list>
				<ref bean="1car"/>
				<ref bean="1car2"/>
				<bean id="1car3" class="com.d.spring.beans.collections.Car">
					<constructor-arg value="H"></constructor-arg>
					<constructor-arg value="H1"></constructor-arg>
					<constructor-arg value="200000" type="double"></constructor-arg>
					<property name="maxSpeed" value="200"></property>
				</bean>
				
			</list>
		</property>
	</bean>
	
	
	
	
	
	
	
	
	
	<!-- 配置Map属性值学习 -->
	
	<bean id="person25" class="com.d.spring.beans.collections.Person2">
		<property name="name" value="Mike"></property>
		<property name="age" value="23"></property>
		<property name="cars">
			<map>
				<entry key="AA" value-ref="1car"></entry>
				<entry key="BB" value-ref="1car2"></entry>
			</map>
		</property>
	</bean>
	
	<util:list id="carlist">
		<ref bean="1car"/>
		<ref bean="1car2"/>
	</util:list>
	
	<bean id="personlist" class="com.d.spring.beans.collections.Person" p:name="Jam" p:age="12" p:cars-ref="carlist"></bean>
	<!--Propertise 属性  -->
	<bean id="dataSource" class="com.d.spring.beans.collections.DataSource">
		<property name="properties" >
			<props>
				<prop key="user">root</prop>
				<prop key="password">123456</prop>
				<prop key="jdbcUrl">jdbc:mysql</prop>
				<prop key="driverClass">com.mysql.jdbc.Driver</prop>
			</props>
			
		</property>
	
	</bean>
	
	
	
	
</beans>
